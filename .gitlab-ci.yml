stages:
  - build
  - test
  - release image
  - scan image
  - slim image
  - staging
  - deploy

default:
  image: eclipse-temurin:20

variables:
  VARIABLES_FILE: "./variables.txt"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dstyle.color=always"

#workflow:
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

cache:
  - key: dependencies
    paths:
      - .m2

build-job:
  stage: build
  tags:
    - vps #tag to vps runner
  script:
    - apt-get update && apt-get install -y maven
    - mvn ${MAVEN_OPTS} -B clean test
    - MVN_VERSION=$(mvn --non-recursive help:evaluate -Dexpression=project.version | grep -v '\[.*')
    - echo $MVN_VERSION
    - echo 'export MVN_VERSION=$MVN_VERSION' > ${VARIABLES_FILE}
  except:
    changes:
      - "*.md" #you don't want to run pipeline if it's not contains changes in readme
#      - ".gitlab-ci.*"
  artifacts:
    paths:
      - ${VARIABLES_FILE}
    expire_in: 7 days

test-job:
  stage: test
  tags:
    - vps #tag to vps runner
  script:
    - apt-get update && apt-get install -y maven
    - mvn ${MAVEN_OPTS} -Drevision=x.y.z-SUFFIX -DskipTests -B clean install
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  artifacts:
    paths:
      - target/*.jar
    expire_in: 7 days

build_docker_job:
  stage: release image
  tags:
    - vps
  needs:
    - build-job
    - test-job
  image: docker:stable
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_BUILDKIT: 1
    DOCKER_DRIVER: overlay2
#    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
#    - docker info
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
#    - source ${VARIABLES_FILE}
    - echo $CI_REGISTRY_IMAGE/$CI_PROJECT_TITLE:$CI_COMMIT_SHORT_SHA
    - echo $CI_REGISTRY_IMAGE/$CI_PROJECT_TITLE:$CI_COMMIT_REF_SLUG
    - docker build -t $CI_REGISTRY_IMAGE/$CI_PROJECT_TITLE:$CI_COMMIT_SHORT_SHA .
    - docker build -t $CI_REGISTRY_IMAGE/$CI_PROJECT_TITLE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE/$CI_PROJECT_TITLE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE/$CI_PROJECT_TITLE:$CI_COMMIT_REF_SLUG

#deploy-job:
#  stage: deploy
#  needs:
#    - build_docker_job
#  tags:
#    - vps
#  before_script:
#    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - ssh-keyscan $SSH_TARGET >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - ssh $SSH_USER@$SSH_TARGET "hostname"
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  environment: production