stages:
  - build
  - test
  - release image
  - staging
  - deploy

default:
  image: eclipse-temurin:20

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dstyle.color=always"

#workflow:
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

cache:
  - key: dependencies
    paths:
      - .m2

build-job:
  stage: build
  tags:
    - vps #tag to vps runner
#  services:
#    - name: postgres:alpine
#      alias: mydb
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_TARGET >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$SSH_TARGET "hostname"
    - apt-get update && apt-get install -y maven
    - mvn clean
    - mvn compile
    - mvn package
  start_in: 5 seconds
  when: delayed
  except:
    changes:
      - "*.md" #you don't want to run pipeline if it's not contains changes in readme
  artifacts:
    paths:
      - "target/*.jar"
    expire_in: 1 day